{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\\r\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\\r of elements in a mapping, issuing ERC721 ids, or counting request ids.\\r  * Include with `using Counters for Counters.Counter;`\\r Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\\r overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\\r directly accessed.\\r\",\"methods\":{},\"title\":\"Counters\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xedc1d46f66898d8ae33a7e16244579d680a25554936a5e72f59f535d0a8b5dfe\",\"urls\":[\"bzzr://7f2a92ea20cb67d3e26279ade62a463b21d8c214bea1bacb495e35fe1705b7ef\"]},\"/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75\",\"urls\":[\"bzzr://cdb2eefb0ce6e610ee1b981cdaed5906eaeff5363d4cc6f3df854c93148c3916\"]}},\"version\":1}",
  "bytecode": "0x604c6025600b82828239805160001a6073141515601857fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e223c3059205b96f689e9f96e7c62fd4176da641dad21cce00c37242927014540029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e223c3059205b96f689e9f96e7c62fd4176da641dad21cce00c37242927014540029",
  "sourceMap": "644:870:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "644:870:5:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\RL\\Documents\\Udacity_BC\\Projects\\Capstone_real_estate_mkt\\blockchain-Capstone-master\\node_modules\\openzeppelin-solidity\\contracts\\drafts\\Counters.sol",
  "ast": {
    "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        10286
      ]
    },
    "id": 10287,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10239,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 10240,
        "nodeType": "ImportDirective",
        "scope": 10287,
        "sourceUnit": 10474,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\r\n@author Matt Condon (@shrugs)\r\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n\n * Include with `using Counters for Counters.Counter;`\r\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\ndirectly accessed.\r",
        "fullyImplemented": true,
        "id": 10286,
        "linearizedBaseContracts": [
          10286
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10243,
            "libraryName": {
              "contractScope": null,
              "id": 10241,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "674:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10473",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "668:27:5",
            "typeName": {
              "id": 10242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 10246,
            "members": [
              {
                "constant": false,
                "id": 10245,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 10246,
                "src": "1046:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10244,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1046:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 10286,
            "src": "703:379:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 10256,
              "nodeType": "Block",
              "src": "1164:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 10253,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10248,
                      "src": "1182:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 10254,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10245,
                    "src": "1182:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10252,
                  "id": 10255,
                  "nodeType": "Return",
                  "src": "1175:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 10257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10248,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10257,
                  "src": "1107:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10247,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1107:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:25:5"
            },
            "returnParameters": {
              "id": 10252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10257,
                  "src": "1155:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:9:5"
            },
            "scope": 10286,
            "src": "1090:114:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10268,
              "nodeType": "Block",
              "src": "1265:128:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10262,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10259,
                        "src": "1366:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "1366:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1366:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10267,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 10269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10259,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10269,
                  "src": "1231:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10258,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1231:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1230:25:5"
            },
            "returnParameters": {
              "id": 10261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:5"
            },
            "scope": 10286,
            "src": "1212:181:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10284,
              "nodeType": "Block",
              "src": "1454:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10274,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10271,
                        "src": "1465:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "1465:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 10280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10277,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10271,
                            "src": "1482:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 10278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10245,
                          "src": "1482:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10329,
                        "src": "1482:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1482:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10283,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 10285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10271,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10285,
                  "src": "1420:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10270,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1420:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:25:5"
            },
            "returnParameters": {
              "id": 10273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:0:5"
            },
            "scope": 10286,
            "src": "1401:110:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10287,
        "src": "644:870:5"
      }
    ],
    "src": "0:1516:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        10286
      ]
    },
    "id": 10287,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10239,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 10240,
        "nodeType": "ImportDirective",
        "scope": 10287,
        "sourceUnit": 10474,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\r\n@author Matt Condon (@shrugs)\r\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n\n * Include with `using Counters for Counters.Counter;`\r\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\ndirectly accessed.\r",
        "fullyImplemented": true,
        "id": 10286,
        "linearizedBaseContracts": [
          10286
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10243,
            "libraryName": {
              "contractScope": null,
              "id": 10241,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "674:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10473",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "668:27:5",
            "typeName": {
              "id": 10242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 10246,
            "members": [
              {
                "constant": false,
                "id": 10245,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 10246,
                "src": "1046:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10244,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1046:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 10286,
            "src": "703:379:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 10256,
              "nodeType": "Block",
              "src": "1164:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 10253,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10248,
                      "src": "1182:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 10254,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10245,
                    "src": "1182:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10252,
                  "id": 10255,
                  "nodeType": "Return",
                  "src": "1175:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 10257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10248,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10257,
                  "src": "1107:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10247,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1107:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:25:5"
            },
            "returnParameters": {
              "id": 10252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10257,
                  "src": "1155:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:9:5"
            },
            "scope": 10286,
            "src": "1090:114:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10268,
              "nodeType": "Block",
              "src": "1265:128:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10262,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10259,
                        "src": "1366:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "1366:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1366:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10267,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 10269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10259,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10269,
                  "src": "1231:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10258,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1231:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1230:25:5"
            },
            "returnParameters": {
              "id": 10261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:5"
            },
            "scope": 10286,
            "src": "1212:181:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10284,
              "nodeType": "Block",
              "src": "1454:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10274,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10271,
                        "src": "1465:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "1465:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 10280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10277,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10271,
                            "src": "1482:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 10278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10245,
                          "src": "1482:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10329,
                        "src": "1482:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1482:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10283,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 10285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10271,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10285,
                  "src": "1420:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10270,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10246,
                    "src": "1420:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10246_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:25:5"
            },
            "returnParameters": {
              "id": 10273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:0:5"
            },
            "scope": 10286,
            "src": "1401:110:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10287,
        "src": "644:870:5"
      }
    ],
    "src": "0:1516:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-25T02:21:56.099Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)\r",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r of elements in a mapping, issuing ERC721 ids, or counting request ids.\r  * Include with `using Counters for Counters.Counter;`\r Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r directly accessed.\r",
    "methods": {},
    "title": "Counters\r"
  },
  "userdoc": {
    "methods": {}
  }
}