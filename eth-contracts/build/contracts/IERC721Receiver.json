{
  "contractName": "IERC721Receiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers\\r from ERC721 asset contracts.\\r\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient\\r after a {IERC721-safeTransferFrom}. This function MUST return the function selector,\\r otherwise the caller will revert the transaction. The selector to be\\r returned can be obtained as `this.onERC721Received.selector`. This\\r function MAY throw to revert and reject the transfer.\\r Note: the ERC721 contract address is always the message sender.\\r\",\"params\":{\"data\":\"Additional data with no specified format\\r\",\"from\":\"The address which previously owned the token\\r\",\"operator\":\"The address which called `safeTransferFrom` function\\r\",\"tokenId\":\"The NFT identifier which is being transferred\\r\"},\"return\":\"bytes4 `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\r\"}},\"title\":\"ERC721 token receiver interface\\r\"},\"userdoc\":{\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x547a657dc6f559ab1f6f347f203fadf5be0b317eb44197a843cea050dc4eb4af\",\"urls\":[\"bzzr://ad9d8a625a41c7afaf368ad4f27cd78252d0c196c473db45f0902bccb5bf7324\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ncontract IERC721Receiver {\r\n    /**\r\n     * @notice Handle the receipt of an NFT\r\n     * @dev The ERC721 smart contract calls this function on the recipient\r\n     * after a {IERC721-safeTransferFrom}. This function MUST return the function selector,\r\n     * otherwise the caller will revert the transaction. The selector to be\r\n     * returned can be obtained as `this.onERC721Received.selector`. This\r\n     * function MAY throw to revert and reject the transfer.\r\n     * Note: the ERC721 contract address is always the message sender.\r\n     * @param operator The address which called `safeTransferFrom` function\r\n     * @param from The address which previously owned the token\r\n     * @param tokenId The NFT identifier which is being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\r\n     */\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data)\r\n    public returns (bytes4);\r\n}\r\n",
  "sourcePath": "C:\\Users\\RL\\Documents\\Udacity_BC\\Projects\\Capstone_real_estate_mkt\\blockchain-Capstone-master\\node_modules\\openzeppelin-solidity\\contracts\\token\\ERC721\\IERC721Receiver.sol",
  "ast": {
    "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
    "exportedSymbols": {
      "IERC721Receiver": [
        10490
      ]
    },
    "id": 10491,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC721 token receiver interface\r\n@dev Interface for any contract that wants to support safeTransfers\r\nfrom ERC721 asset contracts.\r",
        "fullyImplemented": false,
        "id": 10490,
        "linearizedBaseContracts": [
          10490
        ],
        "name": "IERC721Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\r\n@dev The ERC721 smart contract calls this function on the recipient\r\nafter a {IERC721-safeTransferFrom}. This function MUST return the function selector,\r\notherwise the caller will revert the transaction. The selector to be\r\nreturned can be obtained as `this.onERC721Received.selector`. This\r\nfunction MAY throw to revert and reject the transfer.\r\nNote: the ERC721 contract address is always the message sender.\r\n@param operator The address which called `safeTransferFrom` function\r\n@param from The address which previously owned the token\r\n@param tokenId The NFT identifier which is being transferred\r\n@param data Additional data with no specified format\r\n@return bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\r",
            "id": 10489,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10478,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1127:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10480,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1145:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10482,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1159:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10484,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1176:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10483,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:68:7"
            },
            "returnParameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1216:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1215:8:7"
            },
            "scope": 10490,
            "src": "1101:123:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10491,
        "src": "185:1042:7"
      }
    ],
    "src": "0:1229:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/RL/Documents/Udacity_BC/Projects/Capstone_real_estate_mkt/blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
    "exportedSymbols": {
      "IERC721Receiver": [
        10490
      ]
    },
    "id": 10491,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC721 token receiver interface\r\n@dev Interface for any contract that wants to support safeTransfers\r\nfrom ERC721 asset contracts.\r",
        "fullyImplemented": false,
        "id": 10490,
        "linearizedBaseContracts": [
          10490
        ],
        "name": "IERC721Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\r\n@dev The ERC721 smart contract calls this function on the recipient\r\nafter a {IERC721-safeTransferFrom}. This function MUST return the function selector,\r\notherwise the caller will revert the transaction. The selector to be\r\nreturned can be obtained as `this.onERC721Received.selector`. This\r\nfunction MAY throw to revert and reject the transfer.\r\nNote: the ERC721 contract address is always the message sender.\r\n@param operator The address which called `safeTransferFrom` function\r\n@param from The address which previously owned the token\r\n@param tokenId The NFT identifier which is being transferred\r\n@param data Additional data with no specified format\r\n@return bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\r",
            "id": 10489,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10478,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1127:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10480,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1145:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10482,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1159:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10484,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1176:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10483,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:68:7"
            },
            "returnParameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "1216:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1215:8:7"
            },
            "scope": 10490,
            "src": "1101:123:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10491,
        "src": "185:1042:7"
      }
    ],
    "src": "0:1229:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-20T15:37:12.580Z",
  "devdoc": {
    "details": "Interface for any contract that wants to support safeTransfers\r from ERC721 asset contracts.\r",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient\r after a {IERC721-safeTransferFrom}. This function MUST return the function selector,\r otherwise the caller will revert the transaction. The selector to be\r returned can be obtained as `this.onERC721Received.selector`. This\r function MAY throw to revert and reject the transfer.\r Note: the ERC721 contract address is always the message sender.\r",
        "params": {
          "data": "Additional data with no specified format\r",
          "from": "The address which previously owned the token\r",
          "operator": "The address which called `safeTransferFrom` function\r",
          "tokenId": "The NFT identifier which is being transferred\r"
        },
        "return": "bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\r"
      }
    },
    "title": "ERC721 token receiver interface\r"
  },
  "userdoc": {
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT\r"
      }
    }
  }
}